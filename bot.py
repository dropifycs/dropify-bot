import os
import json
import logging
from logging.handlers import RotatingFileHandler
from flask import Flask, request
import telebot

# === File Logging Setup ===
logger = logging.getLogger()
logger.setLevel(logging.INFO)
file_handler = RotatingFileHandler(
    'bot.log', maxBytes=5*1024*1024, backupCount=3, encoding='utf-8'
)
formatter = logging.Formatter('%(asctime)s %(levelname)s %(name)s: %(message)s')
file_handler.setFormatter(formatter)
logger.addHandler(file_handler)
logging.getLogger('werkzeug').addHandler(file_handler)  # log Flask events

# === Telegram Bot & Flask Setup ===
TOKEN       = os.environ.get("BOT_TOKEN")
CHANNEL_ID  = os.environ.get("CHANNEL_ID")    # e.g. "-1001234567890"
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")   # e.g. "https://dropify-bot.onrender.com"

if not TOKEN:
    logger.error("BOT_TOKEN environment variable is missing")
    raise RuntimeError("–ù–µ –∑–∞–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)
WEBHOOK_PATH = f"/{TOKEN}"

# === Subscribers ===
SUBSCRIBERS_FILE = 'subscribers.json'
try:
    with open(SUBSCRIBERS_FILE, 'r', encoding='utf-8') as f:
        subscribers = set(json.load(f))
except Exception:
    subscribers = set()

def save_subscribers():
    with open(SUBSCRIBERS_FILE, 'w', encoding='utf-8') as f:
        json.dump(list(subscribers), f, ensure_ascii=False, indent=2)

# === Contest state ===
contest_active = False
claimed_users = set()

# === Routes ===
@app.before_first_request
def setup_webhook():
    bot.remove_webhook()
    bot.set_webhook(
        url=f"{WEBHOOK_URL}{WEBHOOK_PATH}",
        allowed_updates=["message", "channel_post"]
    )

@app.route("/", methods=["GET"])
def index():
    return "OK", 200

@app.route(WEBHOOK_PATH, methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.get_data().decode('utf-8'))
    bot.process_new_updates([update])
    return "OK", 200

@app.route("/notify_promo", methods=["POST"])
def notify_promo():
    promo = """üî• –ù–û–í–´–ï –ü–†–û–ú–û–ö–û–î–´:

Hellcase ‚Äî DROPIFYCS
Farmskins ‚Äî DROPIFYCS
CaseBattle ‚Äî DROPIFYCS
DinoDrop ‚Äî DROPIFYCS
ForceDrop ‚Äî DROPIFYCS
"""
    logger.info("Notifying subscribers of new promo")
    removed = []
    for user_id in list(subscribers):
        try:
            bot.send_message(user_id, promo)
        except Exception:
            removed.append(user_id)
    for rid in removed:
        subscribers.discard(rid)
    save_subscribers()
    return "Notified", 200

@app.route("/post_daily", methods=["POST"])
def post_daily():
    daily = """üéÅ –•–ê–õ–Ø–í–ê –ù–ê –°–ï–ì–û–î–ù–Ø:

1. Hellcase ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ–Ω—É—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
2. Farmskins ‚Äî –∫–æ–ª—ë—Å–∏–∫–æ —Ö–∞–ª—è–≤—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
3. CaseBattle ‚Äî —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –±–æ–Ω—É—Å—ã –ø–æ –∫–æ–¥—É DROPIFYCS.
4. DinoDrop ‚Äî –±–æ–Ω—É—Å –∑–∞ –≤—Ö–æ–¥ + —à–∞–Ω—Å –Ω–∞ —Å–∫–∏–Ω.
5. ForceDrop ‚Äî –±–æ–Ω—É—Å –∑–∞ –¥–µ–ø–æ–∑–∏—Ç –∏ —Ñ—Ä–∏-—Å–ø–∏–Ω—ã.
"""
    logger.info("Posting daily update to channel")
    bot.send_message(CHANNEL_ID, daily)
    return "Posted", 200

# === Personal command handlers ===
@bot.message_handler(commands=['start'])
def send_welcome(message):
    txt = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dropify CS –±–æ—Ç!\n\n"
        "/promo ‚Äî –ü—Ä–æ–º–æ–∫–æ–¥—ã\n"
        "/daily ‚Äî –•–∞–ª—è–≤–∞ –¥–Ω—è\n"
        "/links ‚Äî –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–µ —Å–∞–π—Ç—ã\n"
        "/stats ‚Äî –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–∞\n"
        "/subscribe ‚Äî –õ–∏—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        "/unsubscribe ‚Äî –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
        "/start_contest ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—É—Ä—Å\n"
        "/stop_contest ‚Äî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä—Å\n"
        "/claim ‚Äî –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ"
    )
    logger.info(f"Handled /start from {message.chat.id}")
    bot.reply_to(message, txt)

@bot.message_handler(commands=['promo'])
def send_promo(message):
    promo_text = """üî• –ê–ö–¢–ò–í–ù–´–ï –ü–†–û–ú–û–ö–û–î–´:

Hellcase ‚Äî DROPIFYCS
Farmskins ‚Äî DROPIFYCS
CaseBattle ‚Äî DROPIFYCS
DinoDrop ‚Äî DROPIFYCS
ForceDrop ‚Äî DROPIFYCS
"""
    logger.info(f"Handled /promo for {message.chat.id}")
    bot.send_message(message.chat.id, promo_text)

@bot.message_handler(commands=['daily'])
def send_daily(message):
    daily_text = """üéÅ –•–ê–õ–Ø–í–ê –ù–ê –°–ï–ì–û–î–ù–Ø:

1. Hellcase ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ–Ω—É—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
2. Farmskins ‚Äî –∫–æ–ª—ë—Å–∏–∫–æ —Ö–∞–ª—è–≤—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
3. CaseBattle ‚Äî —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –±–æ–Ω—É—Å—ã –ø–æ –∫–æ–¥—É DROPIFYCS.
4. DinoDrop ‚Äî –±–æ–Ω—É—Å –∑–∞ –≤—Ö–æ–¥ + —à–∞–Ω—Å –Ω–∞ —Å–∫–∏–Ω.
5. ForceDrop ‚Äî –±–æ–Ω—É—Å –∑–∞ –¥–µ–ø–æ–∑–∏—Ç –∏ —Ñ—Ä–∏-—Å–ø–∏–Ω—ã.
"""
    logger.info(f"Handled /daily for {message.chat.id}")
    bot.send_message(message.chat.id, daily_text)

@bot.message_handler(commands=['links'])
def send_links(message):
    links_text = """üîó –ü–ê–†–¢–ù–Å–†–°–ö–ò–ï –°–°–´–õ–ö–ò:

Hellcase:   https://hellcase.com/partner
Farmskins: https://farmskins.com/partner
CaseBattle: https://case-battle.com/partner
DinoDrop:   https://dino-drop.com/partner
ForceDrop:  https://forcedrop.com/partner
"""
    logger.info(f"Handled /links for {message.chat.id}")
    bot.send_message(message.chat.id, links_text)

@bot.message_handler(commands=['stats'])
def send_stats(message):
    try:
        count = bot.get_chat_members_count(CHANNEL_ID)
    except Exception:
        logger.error("Error fetching chat member count", exc_info=True)
        count = "‚ùì"
    bot.send_message(message.chat.id, f"üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –∫–∞–Ω–∞–ª–µ: {count}")

@bot.message_handler(commands=['subscribe'])
def subscribe(message):
    subscribers.add(message.chat.id)
    save_subscribers()
    bot.reply_to(message, "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ª–∏—á–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö.")

@bot.message_handler(commands=['unsubscribe'])
def unsubscribe(message):
    subscribers.discard(message.chat.id)
    save_subscribers()
    bot.reply_to(message, "‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –ª–∏—á–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")

@bot.message_handler(commands=['start_contest'])
def start_contest(message):
    global contest_active, claimed_users
    contest_active = True
    claimed_users.clear()
    bot.reply_to(message, "üèÅ –ö–æ–Ω–∫—É—Ä—Å –∑–∞–ø—É—â–µ–Ω! –ü–µ—Ä–≤—ã–π, –∫—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç /claim ‚Äî –ø–æ–ª—É—á–∏—Ç –±–æ–Ω—É—Å!")

@bot.message_handler(commands=['stop_contest'])
def stop_contest(message):
    global contest_active
    contest_active = False
    bot.reply_to(message, "‚èπ –ö–æ–Ω–∫—É—Ä—Å –∑–∞–≤–µ—Ä—à—ë–Ω.")

@bot.message_handler(commands=['claim'])
def claim(message):
    global contest_active, claimed_users
    if not contest_active:
        return bot.reply_to(message, "‚ùå –ö–æ–Ω–∫—É—Ä—Å —Å–µ–π—á–∞—Å –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω.")
    if message.chat.id in claimed_users:
        return bot.reply_to(message, "‚ö†Ô∏è –í—ã —É–∂–µ –∑–∞—è–≤–ª—è–ª–∏—Å—å.")
    claimed_users.add(message.chat.id)
    if len(claimed_users) == 1:
        bot.reply_to(message, "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–µ—Ä–≤—ã–π! –í–æ—Ç –≤–∞—à —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –±–æ–Ω—É—Å: EXTRADROP2025")
    else:
        bot.reply_to(message, "‚úÖ –í—ã –∑–∞—è–≤–∏–ª–∏—Å—å! –ù–æ –ø—Ä–∏–∑ —É–∂–µ –∑–∞–±—Ä–∞–ª –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π.")

# === Channel post handlers ===
@bot.channel_post_handler(commands=['promo'])
def channel_send_promo(channel_post):
    promo_text = """üî• –ê–ö–¢–ò–í–ù–´–ï –ü–†–û–ú–û–ö–û–î–´:

Hellcase ‚Äî DROPIFYCS
Farmskins ‚Äî DROPIFYCS
CaseBattle ‚Äî DROPIFYCS
DinoDrop ‚Äî DROPIFYCS
ForceDrop ‚Äî DROPIFYCS
"""
    bot.send_message(channel_post.chat.id, promo_text)

@bot.channel_post_handler(commands=['daily'])
def channel_send_daily(channel_post):
    daily_text = """üéÅ –•–ê–õ–Ø–í–ê –ù–ê –°–ï–ì–û–î–ù–Ø:

1. Hellcase ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ–Ω—É—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
2. Farmskins ‚Äî –∫–æ–ª—ë—Å–∏–∫–æ —Ö–∞–ª—è–≤—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
3. CaseBattle ‚Äî —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –∏ –±–æ–Ω—É—Å—ã –ø–æ –∫–æ–¥—É DROPIFYCS.
4. DinoDrop ‚Äî –±–æ–Ω—É—Å –∑–∞ –≤—Ö–æ–¥ + —à–∞–Ω—Å –Ω–∞ —Å–∫–∏–Ω.
5. ForceDrop ‚Äî –±–æ–Ω—É—Å –∑–∞ –¥–µ–ø–æ–∑–∏—Ç –∏ —Ñ—Ä–∏-—Å–ø–∏–Ω—ã.
"""
    bot.send_message(channel_post.chat.id, daily_text)

@bot.channel_post_handler(commands=['links'])
def channel_send_links(channel_post):
    links_text = """üîó –ü–ê–†–¢–ù–Å–†–°–ö–ò–ï –°–°–´–õ–ö–ò:

Hellcase:   https://hellcase.com/partner
Farmskins: https://farmskins.com/partner
CaseBattle: https://case-battle.com/partner
